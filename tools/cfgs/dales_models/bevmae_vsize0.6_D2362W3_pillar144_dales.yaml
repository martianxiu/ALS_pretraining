# follows pretraining: als_models/bevmae_als_voxel_ep_30_sample100_v0.6_bs12
CLASS_NAMES: [ # removed "unlabeled" class
  "Ground",
  "Vegetation",
  "Cars",
  "Trucks",
  "Power Lines",
  "Fences",
  "Poles",
  "Buildings"
]

TARGET_BEST_SCORE_NAME: mIoU
PRETRAINED_MODEL: 


DATA_CONFIG:
    _BASE_CONFIG_: cfgs/dataset_configs/dales_dataset.yaml
    IGNORE_INDEX: 255
    LOOP: 60 # def: 60
    POINT_CLOUD_RANGE: [-72, -72, 0, 72, 72, 288] # pillar sampling (144m crop), voxel_size=0.6
    VOXEL_SIZE: 0.6
    INFO_LIMIT:  # percentage of training data 
    PRETRAIN_MODE: False

    USE_LOCAL_STORAGE: False
    LOCAL_STORAGE_PATH: SGE_ARDIR
    LOCAL_STORAGE_FILE_LIMIT: 7500
    
    USE_SHARED_MEMORY: True
    SHARED_MEMORY_FILE_LIMIT: 30
    
    DATA_AUGMENTOR:
        DISABLE_AUG_LIST: ['placeholder']
        AUG_CONFIG_LIST:
          - NAME: random_world_flip
            PROBABILITY: 0.5
            ALONG_AXIS_LIST: ['x', 'y']

          - NAME: random_world_rotation
            PROBABILITY: 1.0
            WORLD_ROT_ANGLE: [-0.78539816, 0.78539816]

          - NAME: random_world_scaling
            PROBABILITY: 1.0
            WORLD_SCALE_RANGE: [0.95, 1.05]

    DATA_PROCESSOR:
        - NAME: shuffle_points
          SHUFFLE_ENABLED: {
            'train': True,
            'val': True,
            'test': True
          }
        
        - NAME: pillar_crop # crop a block. 
          PILLAR_SIZE: 144
          GRID_SIZE_2D: 10

        - NAME: transform_points_to_voxels_PointToVoxel 
          VOXEL_SIZE: [0.6, 0.6, 0.6] # follows pre-training 
          MAX_POINTS_PER_VOXEL: 5
          MAX_NUMBER_OF_VOXELS: {
            'train': 200000,
            'val': 200000,
            'test': 15000000
          }


DATA_CONFIG_VAL:
    _BASE_CONFIG_: cfgs/dataset_configs/dales_dataset.yaml
    IGNORE_INDEX: 255
    LOOP: 1
    POINT_CLOUD_RANGE: [-72, -72, 0, 72, 72, 288] # pillar sampling (144m crop), voxel_size=0.6
    VOXEL_SIZE: 0.6
    INFO_LIMIT: # percentage of validation data  
    PRETRAIN_MODE: False

    USE_LOCAL_STORAGE: False
    LOCAL_STORAGE_PATH: SGE_ARDIR
    LOCAL_STORAGE_FILE_LIMIT: 7500
    USE_SHARED_MEMORY: True
    SHARED_MEMORY_FILE_LIMIT: 50
    
    DATA_PROCESSOR:
        - NAME: shuffle_points
          SHUFFLE_ENABLED: {
            'train': True,
            'val': True,
            'test': True
          }
        
        # val files are already tiled  

        # - NAME: pillar_crop # crop a block. 
        #   PILLAR_SIZE: 256
        #   GRID_SIZE_2D: 10

        - NAME: transform_points_to_voxels_PointToVoxel 
          VOXEL_SIZE: [0.6,0.6,0.6] # follows pre-training 
          MAX_POINTS_PER_VOXEL: 5
          MAX_NUMBER_OF_VOXELS: {
            'train': 200000,
            'val': 1000000,
            'test': 15000000, # actually, all points will be used in test.
          }

MODEL:
    NAME: BEV_MAE_UNet

    VFE:
        NAME: MeanVFE

    BACKBONE_3D:
        NAME: VoxelResBackBone8xUNet_expand
        WIDTH_MUL: 3 # input_dim = 16 * WIDTH_MUL
        NUM_BLOCKS: [2,3,6,2] # default: [2,2,2,2] 

    SEG_HEAD: 
        NAME: SegmentationHead
        IN_CHANNEL: 16
        LOSS_CONFIG: 
            IGNORE_INDEX: 255 # unlabeled 
        CLS_FC: [16, 16]

OPTIMIZATION: # optimizer and scheduler config
    BATCH_SIZE_PER_GPU: 2 # default 4. V-node ok 
    # BATCH_SIZE_PER_GPU: 2 # debug
    NUM_EPOCHS: 50

    OPTIMIZER: adamW_onecycle
    LR: 0.005
    WEIGHT_DECAY: 0.01
    MOMENTUM: 0.9

    MOMS: [0.95, 0.85]
    PCT_START: 0.1 # which epoch reaches the max initial lr. def: 0.4. 
    DIV_FACTOR: 10 # effective when LambdaLR 
    DECAY_STEP_LIST: [35, 45] # effective when LambdaLR 
    LR_DECAY: 0.1 # effective when LambdaLR 
    LR_CLIP: 0.0000001 # effective when LambdaLR 

    LR_WARMUP: False
    WARMUP_EPOCH: 1

    GRAD_NORM_CLIP: 10
